<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Puzzles on Chitharanjan&#39;s Blog</title>
    <link>https://cdax.github.io/tags/puzzles/</link>
    <description>Recent content in Puzzles on Chitharanjan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Mar 2015 20:53:15 +0530</lastBuildDate>
    <atom:link href="https://cdax.github.io/tags/puzzles/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>(Solution to) Prison Break: A Simple Counting Problem</title>
      <link>https://cdax.github.io/post/prison-break-sol/</link>
      <pubDate>Sun, 08 Mar 2015 20:53:15 +0530</pubDate>
      
      <guid>https://cdax.github.io/post/prison-break-sol/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;Imagine a prison having 36 cells arranged like the squares in a 6-by-6 grid. All adjacent cells have doors between them; doors that you can open. You, the prisoner in the top-left corner cell, are told that you can have your freedom if you can find your way to the diagonally opposite corner cell, after passing through each other cell exactly once.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://cdax.github.io/img/prison-break.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Can you figure such a way out of the prison?&lt;/p&gt;

&lt;h4 id=&#34;the-solution&#34;&gt;The Solution&lt;/h4&gt;

&lt;p&gt;With counting problems, as with most real-life problems, it makes a lot of sense to take a step back and think hard about the feasibility of a solution before actually setting out to discover possible solutions or to count them. Is it even possible for you, the prisoner, to escape by getting to the diagonally opposite corner cell after crossing each other cell exactly once?&lt;/p&gt;

&lt;p&gt;Having solved similar problems before, you decide to colour the map like a chessboard – for ease of making logical deductions. Since adjacent cells have doors between them, you can imagine yourself navigating the chessboard-prison exactly the way &lt;a href=&#34;http://en.wikipedia.org/wiki/Pawn_%28chess%29&#34;&gt;a pawn&lt;/a&gt; would.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdax.github.io/img/prison-break-sol.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It’s easy to see that a pawn-move from one cell to an adjacent cell will always be a move from a white square to a black square, or vice-versa. This means that you’ll require an even number of pawn-moves (at least two) to get from a square of one colour, to another square of the same colour.&lt;/p&gt;

&lt;p&gt;How many moves will you be making if you must pass through each cell exactly once? The answer is &lt;strong&gt;35&lt;/strong&gt;, since 35 other prison cells need to be entered exactly once, with one pawn-move per cell. &lt;em&gt;No cell may be entered more than once.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I hope you can see by now that you’ve been had, that you’ve been at the receiving end of the prison warden’s cruel joke. &lt;em&gt;Because diagonally opposite corner cells will always be the same colour,&lt;/em&gt; and you can never get from one to the other in an odd number (35) of pawn-moves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Prison Break: A Simple Counting Problem</title>
      <link>https://cdax.github.io/post/prison-break/</link>
      <pubDate>Fri, 20 Feb 2015 20:50:11 +0530</pubDate>
      
      <guid>https://cdax.github.io/post/prison-break/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Imagine a prison having 36 cells arranged like the squares in a 6-by-6 grid. All adjacent cells have doors between them; doors that you can open. You, the prisoner in the top-left corner cell, are told that you can have your freedom if you can find your way to the diagonally opposite corner cell, after passing through each other cell exactly once.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://cdax.github.io/img/prison-break.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Can you figure such a way out of the prison?&lt;/p&gt;

&lt;p&gt;If this seems to be taking you an embarrassingly long time, feel free to [click here for the solution]()&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Coffee Can Problem</title>
      <link>https://cdax.github.io/post/coffee-can/</link>
      <pubDate>Fri, 31 Oct 2014 14:16:01 +0530</pubDate>
      
      <guid>https://cdax.github.io/post/coffee-can/</guid>
      <description>

&lt;h4 id=&#34;the-problem&#34;&gt;The Problem&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Imagine you&amp;rsquo;ve got a can full of coffee beans &amp;ndash; some are black and the rest are white. Outside of this can, you&amp;rsquo;ve also got yourself a large reservoir of black coffee beans. You keep picking out beans from your can, two at a time. If both the beans you picked are the same colour, you&amp;rsquo;ve got to throw both of them away and add to the can with a black bean from your stockpile. On the other hand, if the beans are different colours, you&amp;rsquo;ve got to throw the black bean away and restore the white one to the can. Keep repeating this till you&amp;rsquo;re left with exactly one bean.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;em&gt;Coffee Can Problem&lt;/em&gt; is two-fold. First, you&amp;rsquo;ve got to prove that this series of experiments &lt;sub&gt;will&lt;/sub&gt; terminate with exactly one bean left in the can. And second, you need to determine the colour of the last remaining bean given the respective numbers of black and white beans that you started out with (say b&lt;sub&gt;1&lt;/sub&gt; and w&lt;sub&gt;1&lt;/sub&gt;).&lt;/p&gt;

&lt;h4 id=&#34;the-solution&#34;&gt;The Solution&lt;/h4&gt;

&lt;p&gt;Let&amp;rsquo;s say that just before the i-th pick, you&amp;rsquo;re left with exactly b&lt;sub&gt;i&lt;/sub&gt; black beans and w&lt;sub&gt;i&lt;/sub&gt; white beans inside the can. The i-th pick can have one of three possible outcomes:&lt;/p&gt;

&lt;h5 id=&#34;outcome-i-both-the-beans-you-picked-were-black&#34;&gt;Outcome I: Both the beans you picked were BLACK&lt;/h5&gt;

&lt;p&gt;If this happens, then after throwing away both beans and replacing them with one black bean from your pile, you&amp;rsquo;re left with b&lt;sub&gt;i&lt;/sub&gt; - 1 black beans and w&lt;sub&gt;i&lt;/sub&gt; white beans.&lt;/p&gt;

&lt;h5 id=&#34;outcome-ii-both-the-beans-you-picked-were-white&#34;&gt;Outcome II: Both the beans you picked were WHITE&lt;/h5&gt;

&lt;p&gt;In this situation, you&amp;rsquo;ve got to throw away the two white beans and replace them with a black bean. So that you&amp;rsquo;re left with b&lt;sub&gt;i&lt;/sub&gt; + 1 black beans and w&lt;sub&gt;i&lt;/sub&gt; - 2 white beans.&lt;/p&gt;

&lt;h5 id=&#34;outcome-iii-the-beans-you-picked-were-different-colours&#34;&gt;Outcome III: The beans you picked were different colours&lt;/h5&gt;

&lt;p&gt;In this last scenario, you&amp;rsquo;ll be throwing away the black bean and putting the white one back in the can, so that you&amp;rsquo;ve got yourself b&lt;sub&gt;i&lt;/sub&gt; - 1 black beans and w&lt;sub&gt;i&lt;/sub&gt; white beans, just like &lt;em&gt;Outcome I&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Two observations are key:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No matter what the outcome, the total number of beans in the can will &lt;em&gt;always&lt;/em&gt; come down by one.&lt;/li&gt;
&lt;li&gt;The number of white beans in the can will either stay the same, or drop by two, or in other words, white beans always leave the can two at a time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the first observation, it directly follows that you&amp;rsquo;ll always finish with exactly one bean in the can (because each pick takes a bean away from the total).&lt;/p&gt;

&lt;p&gt;And putting both observations together, it is easy to see that you&amp;rsquo;ll run out of white beans if and only if you had an even number of white beans to begin with. &lt;em&gt;It doesn&amp;rsquo;t matter how many black beans you had in the can at any point of time.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;thinking-about-corner-cases&#34;&gt;Thinking about Corner Cases&lt;/h4&gt;

&lt;p&gt;The reasoning above assumes that at least one pick will always be made, so a corner case occurs when you only get one bean to begin with. &lt;em&gt;Does our solution still hold?&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;takeaways-and-source&#34;&gt;Takeaways and Source&lt;/h4&gt;

&lt;p&gt;My biggest learning from this problem was about the existence of white coffee beans. Apparently, it&amp;rsquo;s an under-roasted variety that results in a lighter-than-usual brew.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Coffee Can Problem&lt;/em&gt; originally appeared in David Gries&amp;rsquo;s &lt;em&gt;Science of Programming&lt;/em&gt;, though I found it among the exercise problems in Jon Bentley&amp;rsquo;s &lt;em&gt;Programming Pearls&lt;/em&gt; (Ch. 4 - Writing Correct Programs).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tales from the Cryptology Book</title>
      <link>https://cdax.github.io/post/tales-from-the-cryptology-book/</link>
      <pubDate>Sat, 23 Jan 2010 20:39:26 +0530</pubDate>
      
      <guid>https://cdax.github.io/post/tales-from-the-cryptology-book/</guid>
      <description>&lt;p&gt;So last Wednesday, I picked up this great book from my college library (down here, it’s called the ‘Resource Center (RC)’). At the risk of sounding clichéd, I’d like to point out that finding a good book in the RC is like searching for a needle in a you-know-where. But back to the book. It’s called Cryptological Mathematics, authored by Robert Edward Lewand and published by the Mathematical Association of America.&lt;/p&gt;

&lt;p&gt;Now, I’ve been searching for a good book to get started with cryptology ever since I participated in a cryptanalysis event at last year’s Synapse. This so far, has been my best find. The style is perfect for beginners like me. But one has to have some background in algebra and number theory to better understand the encryption and decryption algorithms. OK, so I admit that not all famous ciphers have been explained. But who cares? Those are the ones that’ve been broken! The book imbibes in the reader the right spirit required for cryptanalysis… blah, blah, doopity-doop! THIS BOOK IS JUST A WHOLE LOT OF FUN!!&lt;/p&gt;

&lt;p&gt;But maybe cryptology isn’t my thing. The very first problem from the very first problem-set from the very first chapter of the book tells me that. This is what’s been covered thus far – Mono-alphabetic substitution ciphers (Additive, Multiplicative, Affine and Keyword). So here’s the problem (rephrased in my own mundane way):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cryptanalyze this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;KFM YGV VEM VHK AWK YZK FWG RKF MSJ JZG XOJ MEM DJZ MAM SCJ GKF EJK TSF GJI STM ZSW MKF MEJ KBS XGJ SFH PMJ JIK FME JKR MSZ&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Triple-checked, so don’t crib saying that it must’ve been mistyped)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right before my Analog &amp;amp; Digital Communications lecture, that I had spent trying to decrypt this code, one of my friends had asked why they hadn’t given the keys alongwith the encrypted messages. I had laughed it off back then. Now I am forced to think along similar lines.&lt;/p&gt;

&lt;p&gt;But don’t under-estimate me just yet. I’ve spent just over an hour with this problem (:P). I have an electronics exam coming up, which has kept my mind engaged elsewhere. So I’ve not been able to spend more time with the book. I’ll be back with (lots) more!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>